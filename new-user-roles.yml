---
# Create an environment for a new user
# Tested on a Digital Ocean droplet but will work on any account with
# passwordless ssh access to a root account
#
# Copy a the local public key to the new user's authorized_keys file

# Assumption: We've created an account and have passwordless  root ssh login 
# Specifically for Digital Ocean
# - As long as we've added our public ssh key to Digital Ocean we can specify at
#   droplet creation time to use this public key. 
# - When the above is true whenever we create a new droplet we can 
#   ssh root@droplet-ip into it with no password.
#
#   Note: the password passed into the "user" module has to be an encrypted
#   password. So to make the password be "foo" for the remote user test we do:
#   python -c 'import crypt; print crypt.crypt("test", "$1$SomeSalt$")'
#
# I have to be root to ssh in the first place since no user ssh accounti
# exists initially
# Ordinarily we'd be sudo-ing to get root permission. Here we become_user from
# root to become the non-privileged user

- hosts: do-test3
  remote_user: root
  roles:
   - role: common
     user_name: 'test'
     user_password: "$1$SomeSalt$aIJ0bvHJBSYd307VQuuD90" 
     public_key_file: "~/.ssh/id_rsa.pub"
     tags: "common"

#   - role: marcelocorreia.docker-install
#     tags: "docker"

  post_tasks:
  - name: restart machine
    command: shutdown -r now "Ansible updates triggered"
#  - name: Install latest docker
#    shell: wget -qO- https://get.docker.com/ | sh 
#  - name: Add user to docker groups
#    shell: usermod -aG docker {{ user }}
#
#
  

